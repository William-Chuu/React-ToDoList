{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Header.js","components/pages/About.js","App.js","index.js"],"names":["btnStyle","background","color","border","padding","borderRadius","cursor","float","getStyle","todo","backgroundColor","borderBottom","textDecoration","completed","TodoItem","markComplete","delTodo","id","title","style","type","defaultChecked","onChange","bind","this","onClick","Todos","todos","map","AddTodo","addTodo","useState","setTitle","onSubmit","e","preventDefault","display","name","flex","placeholder","value","target","className","headerStyle","textAlign","linkStyle","Header","to","About","Fragment","App","setTodos","console","log","Axios","delete","then","res","filter","post","data","catch","useEffect","get","exact","path","render","props","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bbaf5d5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TodoItem({todo, markComplete, delTodo}) {\r\n    // destructuring to pull the values out of todo\r\n    const {id, title, completed} = todo;\r\n    //.bind to know exactly which ID we are marking complete or else will do every single one\r\n    // .bind will select that INSTANCE when you click markcomplete ID.\r\n  return (\r\n    <div style={ getStyle(todo) }>\r\n        <p>\r\n            <input type=\"checkbox\"\r\n            defaultChecked={completed} \r\n            onChange={ markComplete.bind(this, id) }/> {' '}\r\n            {title}\r\n            <button onClick={ delTodo.bind(this, id) } style={ btnStyle }>x</button>\r\n        </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst btnStyle = {\r\n    // red\r\n    background: '#ff0000',\r\n    // white\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nfunction getStyle(todo) {\r\n    return {\r\n        backgroundColor: '#f4f4f4',\r\n        padding: '10px',\r\n        borderBottom: '1px #ccc dotted',\r\n        // ternary operator\r\n        textDecoration: todo.completed ? 'line-through' : 'none'\r\n    }\r\n}\r\n\r\n// {todo} is not array this time but individual objects\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo:  PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Todos({todos, markComplete, delTodo}) {\r\n  return (\r\n    // for each loop kinda, for each todo we map through what we want to display (loop through todos)\r\n    // maps creates a list(dict) which needs a key for each value \r\n    <div>\r\n    {todos.map((todo) => (\r\n        <TodoItem key={todo.id} todo={todo} markComplete={markComplete} delTodo={delTodo}/>\r\n        ))\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\n//array of objects\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo:  PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddTodo({addTodo}) {\r\n    // want new todo to be a new state\r\n    // COMPONENT level state vs app level\r\n    const [title, setTitle] = useState('')\r\n    \r\n    // event parameter\r\n    // if have multiple inputs [e.target.name] and name should = state name\r\n    function onChange(e) {\r\n        // state will change dynamicaly to what is in input field\r\n        setTitle(e.target.value)\r\n    }\r\n    \r\n    function onSubmit(e) {\r\n        // to prevent from submitting to actual file\r\n        e.preventDefault();\r\n        addTodo(title)\r\n        // clear field after submitting\r\n        setTitle('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} style= {{ display: 'flex' }}>\r\n            <input\r\n                type='text' \r\n                name='title' \r\n                style={{flex: '10', padding: '5px'}}\r\n                placeholder='Add Todo ...'\r\n                // = the state\r\n                value={title}\r\n                // when enter text\r\n                onChange={onChange}\r\n            />\r\n            <input\r\n                type='submit'\r\n                value='Submit'\r\n                className='btn'\r\n                style={{flex: '1'}}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n// Proptypes\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={ headerStyle }>\r\n            <h1>TodoList</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | \r\n            <Link style={linkStyle} to=\"/about\"> About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    // dark grey\r\n    background: '#333',\r\n    // white\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        // ghost element doesnt show in dom but need in JSX\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0. It is part of a\r\n                React crash course\r\n            </p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Todos from './components/Todos'\nimport AddTodo from './components/AddTodo'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\n// useState is a 'hook' that lets us add state to function components\nimport React, {useState, useEffect} from 'react'\nimport { mockComponent } from 'react-dom/test-utils'\nimport Axios from 'axios'\n\nimport './App.css'\n\nfunction App() {\n  //[current state, function to update state] - like fields\n  // res = response\n  const [todos, setTodos] = useState([])\n  useEffect(() => {\n    console.log('useEffect')\n  \n    Axios.get('http://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => setTodos(res.data))\n  },[setTodos])\n \n  // toggle complete\n  function markComplete(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        // set to opposite (toggles)\n        todo.completed = !todo.completed\n      }\n      return todo\n    }));\n  }\n\n  // return todos that DO NOT match the id \n  function delTodo(id) {\n    console.log(id)\n    // for each todo return todo where id is not equal to passed id\n    // ... = spread operator which copies what is already there\n    // .filter() copies array and keeps elements in array if the function = true. so will get array of elements where todo.id !== id that is passed in.\n    Axios.delete(`http://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => setTodos(todos.filter(todo => todo.id !== id)))\n  }\n\n  // res = response\n  function addTodo(title) {\n    console.log(title); \n    // second paramter is object\n    Axios.post('http://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => {console.log('ok',[...todos, res.data]);setTodos([...todos, res.data])}).catch(e => console.log('error', e))\n      console.log('test');\n  }\n\n  // console.log()\n  // exact excludes everything in the \"/\" route and just displays \"/about\" route\n  // issue is we have 2 components displaying (addtodo + todos)\n  // need render props\n  return (\n    <Router>\n      <div className=\"App\"> \n        <div className=\"container\">\n          <Header />\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodo={addTodo}/>\n              <Todos todos={todos} markComplete={markComplete} delTodo={delTodo}/> \n            </React.Fragment>\n          )} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}